-- --------------------------------------------------------
-- Host:                         192.168.137.2
-- Versi server:                 8.0.11 - MySQL Community Server - GPL
-- OS Server:                    Linux
-- HeidiSQL Versi:               10.2.0.5599
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- membuang struktur untuk procedure informasi.execute10DiagnosaRD
DROP PROCEDURE IF EXISTS `execute10DiagnosaRD`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `execute10DiagnosaRD`(IN `PTGL_AWAL` DATE, IN `PTGL_AKHIR` DATE)
BEGIN
	DECLARE VTGL_AWAL DATETIME;
	DECLARE VTGL_AKHIR DATETIME;
		
	SET VTGL_AWAL = CONCAT(PTGL_AWAL, ' 00:00:01');
	SET VTGL_AKHIR = CONCAT(PTGL_AKHIR, ' 23:59:59');
	
	BEGIN		
		DECLARE VTANGGAL DATE;
		DECLARE VID VARCHAR(25);
		DECLARE VDESKRIPSI VARCHAR(200);
		DECLARE VVALUE BIGINT;
		DECLARE VLASTUPDATED DATETIME;
		
		DECLARE EXEC_NOT_FOUND TINYINT DEFAULT FALSE;		
		DECLARE CR_EXEC CURSOR FOR SELECT DATE(tk.MASUK) TANGGAL
		         , md.KODE ID
					, (SELECT ms.STR FROM master.mrconso ms WHERE ms.SAB='ICD10_1998' AND TTY IN ('PX', 'PT') AND ms.CODE=md.KODE LIMIT 1) DESKRIPSI
					, COUNT(md.KODE) VALUE
					, MAX(tk.MASUK) LASTUPDATED
				FROM pendaftaran.pendaftaran pd
					, pendaftaran.kunjungan tk
					, master.ruangan su
					  LEFT JOIN master.referensi jk ON su.JENIS_KUNJUNGAN=jk.ID AND jk.JENIS=15 
					, medicalrecord.diagnosa md
				WHERE pd.NOMOR=tk.NOPEN AND pd.STATUS IN (1,2) AND tk.STATUS IN (1,2) AND tk.REF IS NULL
						AND tk.RUANGAN=su.ID AND su.JENIS=5 AND su.JENIS_KUNJUNGAN=2 AND tk.NOPEN=md.NOPEN AND md.STATUS=1
						AND tk.MASUK BETWEEN VTGL_AWAL AND VTGL_AKHIR
				GROUP BY DATE(tk.MASUK),ID;
			
		DECLARE CONTINUE HANDLER FOR NOT FOUND SET EXEC_NOT_FOUND = TRUE;
						
		OPEN CR_EXEC;
						
		EXIT_EXEC: LOOP
			FETCH CR_EXEC INTO VTANGGAL, VID, VDESKRIPSI, VVALUE, VLASTUPDATED;								
							
			IF EXEC_NOT_FOUND THEN
				LEAVE EXIT_EXEC;
			END IF;
			
			IF EXISTS(SELECT 1 FROM informasi.diagnosa_rd WHERE TANGGAL = VTANGGAL AND ID = VID) THEN
				UPDATE informasi.diagnosa_rd
				   SET VALUE = VVALUE, LASTUPDATED = VLASTUPDATED
				  WHERE TANGGAL = VTANGGAL AND ID = VID;
			ELSE
				INSERT INTO informasi.diagnosa_rd(TANGGAL, ID, DESKRIPSI, VALUE, LASTUPDATED)
					  VALUES (VTANGGAL, VID, VDESKRIPSI, VVALUE, VLASTUPDATED);
			END IF;
		END LOOP;
		
		CLOSE CR_EXEC;
	END;		
END//
DELIMITER ;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
