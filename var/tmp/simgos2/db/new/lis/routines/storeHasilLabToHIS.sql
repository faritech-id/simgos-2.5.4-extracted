-- --------------------------------------------------------
-- Host:                         192.168.137.2
-- Versi server:                 8.0.11 - MySQL Community Server - GPL
-- OS Server:                    Linux
-- HeidiSQL Versi:               10.2.0.5599
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;

-- membuang struktur untuk procedure lis.storeHasilLabToHIS
DROP PROCEDURE IF EXISTS `storeHasilLabToHIS`;
DELIMITER //
CREATE DEFINER=`root`@`localhost` PROCEDURE `storeHasilLabToHIS`(
	IN `PID` BIGINT
)
BEGIN
	DECLARE VID BIGINT;
	DECLARE VTINDAKAN_MEDIS CHAR(11);
	DECLARE VPARAMETER_TINDAKAN_LAB INT;
	DECLARE VTANGGAL DATETIME;
	DECLARE VHASIL VARCHAR(250);
	DECLARE VKETERANGAN TEXT;
	DECLARE VNILAI_NORMAL VARCHAR(500);
	DECLARE VSATUAN VARCHAR(25);
	DECLARE DATA_NOT_FOUND INT DEFAULT FALSE;
	DECLARE VSTATUS TINYINT DEFAULT 2;
	DECLARE SUCCESS INT DEFAULT TRUE;
	
	DECLARE CONTINUE HANDLER FOR NOT FOUND SET DATA_NOT_FOUND = TRUE;
	
	SELECT hl.ID, tm.ID TINDAKAN_MEDIS, mh.PARAMETER_TINDAKAN_LAB, hl.LIS_TANGGAL, hl.LIS_HASIL, hl.LIS_CATATAN, hl.LIS_NILAI_NORMAL, hl.LIS_SATUAN
	  INTO VID, VTINDAKAN_MEDIS, VPARAMETER_TINDAKAN_LAB, VTANGGAL, VHASIL, VKETERANGAN, VNILAI_NORMAL, VSATUAN
	  FROM lis.hasil_log hl
	  		 , lis.mapping_hasil mh
	  		 , layanan.tindakan_medis tm
	 WHERE mh.LIS_KODE_TEST = hl.LIS_KODE_TEST
	   AND mh.HIS_KODE_TEST = hl.HIS_KODE_TEST
	   AND mh.VENDOR_LIS = hl.VENDOR_LIS
	   AND tm.KUNJUNGAN = hl.HIS_NO_LAB
		AND tm.TINDAKAN = hl.HIS_KODE_TEST
		AND tm.`STATUS` = 1
		AND hl.STATUS = 1
		AND hl.ID = PID
		LIMIT 1;
	
	IF FOUND_ROWS() > 0 THEN
		
		IF EXISTS(
			SELECT 1 
			  FROM layanan.hasil_lab hl 
			 WHERE hl.TINDAKAN_MEDIS = VTINDAKAN_MEDIS 
			   AND hl.PARAMETER_TINDAKAN = VPARAMETER_TINDAKAN_LAB
			   AND hl.`STATUS` = 1) THEN
			UPDATE layanan.hasil_lab
			   SET TANGGAL = VTANGGAL
			   	 , HASIL = VHASIL
			   	 , NILAI_NORMAL = VNILAI_NORMAL
			   	 , SATUAN = VSATUAN
			   	 , KETERANGAN = VKETERANGAN
			 WHERE TINDAKAN_MEDIS = VTINDAKAN_MEDIS 
			   AND PARAMETER_TINDAKAN = VPARAMETER_TINDAKAN_LAB
			   AND `STATUS` = 1;
		ELSE
			BEGIN
				DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET SUCCESS = FALSE;
				INSERT INTO layanan.hasil_lab(ID, TINDAKAN_MEDIS, PARAMETER_TINDAKAN, TANGGAL, HASIL, NILAI_NORMAL, SATUAN, KETERANGAN, OLEH)
				VALUES(generator.generateIdHasilLab(VTANGGAL), VTINDAKAN_MEDIS, VPARAMETER_TINDAKAN_LAB, VTANGGAL, VHASIL, VNILAI_NORMAL, VSATUAN, VKETERANGAN, 1);
				
				IF NOT SUCCESS THEN
					SET VSTATUS = 8;
				END IF;
			END;
		END IF;		
	ELSE
		SET VSTATUS = 11;
	END IF;
	
	INSERT INTO aplikasi.automaticexecute(PERINTAH)
		VALUES(CONCAT("UPDATE lis.hasil_log SET STATUS = ", VSTATUS, " WHERE ID = ", PID));
END//
DELIMITER ;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
