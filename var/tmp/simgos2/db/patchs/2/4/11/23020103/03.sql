-- --------------------------------------------------------
-- Host:                         192.168.137.8
-- Versi server:                 8.0.26 - MySQL Community Server - GPL
-- OS Server:                    Linux
-- HeidiSQL Versi:               12.0.0.6468
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;


-- Membuang struktur basisdata untuk pembayaran
USE `pembayaran`;

-- membuang struktur untuk procedure pembayaran.storeAkomodasi
DROP PROCEDURE IF EXISTS `storeAkomodasi`;
DELIMITER //
CREATE PROCEDURE `storeAkomodasi`(
	IN `PKUNJUNGAN` CHAR(19)
)
BEGIN
	DECLARE VTAGIHAN, VNOPEN, VRUANGAN CHAR(10);
	DECLARE VMASUK, VKELUAR DATETIME;
	DECLARE VREF CHAR(21);
	DECLARE VKELAS TINYINT;
	DECLARE VRUANG_KAMAR_TIDUR, VPENJAMIN SMALLINT;
	DECLARE VTANGGAL_PENDAFTARAN, VTANGGAL DATETIME;
	DECLARE VTITIPAN TINYINT;
	DECLARE VPERSENTASE TINYINT;
	DECLARE VDISKON, VPERSENTASE_KENAIKAN DECIMAL(60, 2);
	
	SELECT k.NOPEN, k.MASUK, k.KELUAR, k.RUANGAN, k.REF, k.RUANG_KAMAR_TIDUR, IF(k.TITIPAN = 1, k.TITIPAN_KELAS, rk.KELAS), k.TITIPAN
	  INTO VNOPEN, VMASUK, VKELUAR, VRUANGAN, VREF, VRUANG_KAMAR_TIDUR, VKELAS, VTITIPAN
	  FROM pendaftaran.kunjungan k
	  		 , master.ruang_kamar_tidur rkt
			 , master.ruang_kamar rk
	 WHERE k.NOMOR = PKUNJUNGAN
	   AND master.isRawatInap(k.RUANGAN) = 1
		AND rkt.ID = k.RUANG_KAMAR_TIDUR
		AND rk.ID = rkt.RUANG_KAMAR;
	
	IF FOUND_ROWS() > 0 THEN
		SET VKELUAR = IF(VKELUAR IS NULL, NOW(), VKELUAR);				
		SET VTAGIHAN = pembayaran.getIdTagihan(VNOPEN);
		
		BEGIN
			DECLARE VTARIF_ID INT;
			DECLARE VTARIF INT;
			DECLARE VPAKET SMALLINT;
			DECLARE VKELAS_PAKET TINYINT;
			DECLARE VLAMA TINYINT DEFAULT 0;
			DECLARE VLAMA_DIRAWAT SMALLINT DEFAULT 0;
			DECLARE VSELISIH SMALLINT DEFAULT 0;
		   
		   IF pembayaran.isFinalTagihan(VTAGIHAN) = 0 THEN			   
			   SELECT pkt.ID, pkt.KELAS, pkt.LAMA, pdf.TANGGAL, pj.JENIS INTO VKELAS_PAKET, VKELAS_PAKET, VLAMA, VTANGGAL_PENDAFTARAN, VPENJAMIN
			     FROM pendaftaran.pendaftaran pdf
			     		 LEFT JOIN master.paket pkt ON pkt.ID = pdf.PAKET,
			     		 pendaftaran.penjamin pj
			    WHERE pdf.NOMOR = VNOPEN
				   AND pj.NOPEN = pdf.NOMOR
				 LIMIT 1;
		   
				IF FOUND_ROWS() > 0 THEN
					IF NOT VKELAS_PAKET IS NULL THEN
						SET VKELAS = VKELAS_PAKET;
					END IF;
					
					SET VTANGGAL = VMASUK;
					
					IF EXISTS(SELECT 1
						  FROM aplikasi.properti_config pc
						 WHERE pc.ID = 6
						   AND VALUE = 'TRUE') THEN
						SET VTANGGAL = VTANGGAL_PENDAFTARAN;
					END IF;
				
					SET VLAMA_DIRAWAT = pendaftaran.getLamaDirawat(VMASUK, VKELUAR, VNOPEN, PKUNJUNGAN, VREF);
										
					IF VTAGIHAN != '' AND (NOT VPAKET IS NULL OR VPAKET > 0) THEN
						CALL pembayaran.storeRincianTagihanPaket(VTAGIHAN, VPAKET, PKUNJUNGAN, VTANGGAL, 1);
						
						IF NOT VREF IS NULL OR VREF != '' THEN
							SET VLAMA_DIRAWAT = VLAMA_DIRAWAT + pendaftaran.getLamaDirawatSebelumnya(VREF, VPAKET);
						END IF;
					ELSE
						SET VLAMA = 0;
					END IF;
										
					SET VSELISIH = VLAMA_DIRAWAT - VLAMA;
					IF VTAGIHAN != '' AND (VSELISIH > 0 OR VLAMA_DIRAWAT >= 0) THEN
					   IF VSELISIH >= 0 THEN		
							IF VTITIPAN = 1 THEN
								CALL master.getTarifRuangRawatByKelas(VKELAS, VTANGGAL, VTARIF_ID, VTARIF);
							ELSE			    
					      	CALL master.getTarifRuangRawat(VRUANG_KAMAR_TIDUR, VTANGGAL, VTARIF_ID, VTARIF);
					      END IF;
					      IF pendaftaran.ikutRawatInapIbu(VNOPEN, VREF) = 1 THEN
					      	CALL master.getTarifDiskon(1, VTANGGAL, VPERSENTASE, VDISKON);
					      ELSE
								SET VPERSENTASE = 0;
								SET VDISKON = 0;
					      END IF;
					      SET VPERSENTASE_KENAIKAN = penjamin_rs.getKenaikanTarif(VPENJAMIN, 2, VTANGGAL);
							IF VPERSENTASE_KENAIKAN > 0 THEN
								SET VTARIF = VTARIF + (VTARIF * VPERSENTASE_KENAIKAN);
							END IF;
						   CALL pembayaran.storeRincianTagihan(VTAGIHAN, PKUNJUNGAN, 2, VTARIF_ID, VSELISIH, VTARIF, VKELAS, VPERSENTASE, VDISKON);
						END IF;
					END IF;
				END IF;
			END IF;
		END;
	END IF;
END//
DELIMITER ;

-- membuang struktur untuk procedure pembayaran.storeFarmasi
DROP PROCEDURE IF EXISTS `storeFarmasi`;
DELIMITER //
CREATE PROCEDURE `storeFarmasi`(
	IN `PKUNJUNGAN` CHAR(19),
	IN `PLAYANAN_FARMASI` CHAR(11),
	IN `PFARMASI` SMALLINT,
	IN `PJUMLAH` DECIMAL(60,2)
)
BEGIN
	DECLARE VNOPEN, VRUANGAN CHAR(10);
	DECLARE VTAGIHAN, VTAGIHAN_TERPISAH CHAR(10);
	DECLARE VJENIS_KUNJUNGAN, VJENIS_KUNJUNGAN2 TINYINT;
	DECLARE VTARIF_ID INT;
	DECLARE VTARIF DECIMAL(60,2);
	DECLARE VKELAS SMALLINT DEFAULT 0;
	DECLARE VPAKET SMALLINT DEFAULT NULL;
	DECLARE VQTY DECIMAL(60,2) DEFAULT 0;
	DECLARE VPAKET_DETIL INT DEFAULT 0;
	DECLARE VBARANG_RUANGAN BIGINT;
	DECLARE VTANGGAL DATETIME;
	DECLARE VTGL_PENDAFTARAN DATETIME;
	DECLARE VKUNJUNGAN_YG_MERESEP CHAR(19);
	DECLARE VJUMLAH, VPERSENTASE DECIMAL(60,2) DEFAULT 1.0;
	DECLARE VJUMLAH_RINCIAN DECIMAL(60,2) DEFAULT 1.0;
	DECLARE VPENJAMIN SMALLINT;
	DECLARE VREF CHAR(21);
	
	SELECT k.NOPEN, r.JENIS_KUNJUNGAN, IF(kr.TITIPAN = 1, kr.TITIPAN_KELAS, IF(rk.KELAS IS NULL, 0, rk.KELAS)) KELAS, 
	       p.PAKET, k.MASUK, kr.NOMOR, k.MASUK, k.REF, k.RUANGAN
	  INTO VNOPEN, VJENIS_KUNJUNGAN, VKELAS, 
	       VPAKET, VTANGGAL, VKUNJUNGAN_YG_MERESEP, VTGL_PENDAFTARAN, VREF, VRUANGAN
	  FROM pendaftaran.kunjungan k
	  		 LEFT JOIN layanan.order_resep ores ON ores.NOMOR = k.REF
	  		 LEFT JOIN pendaftaran.kunjungan kr ON kr.NOMOR = ores.KUNJUNGAN
	  		 LEFT JOIN master.ruang_kamar_tidur rkt ON rkt.ID = kr.RUANG_KAMAR_TIDUR
			 LEFT JOIN master.ruang_kamar rk ON rk.ID = rkt.RUANG_KAMAR,
	  		 master.ruangan r,
	  		 pendaftaran.pendaftaran p
	 WHERE k.RUANGAN = r.ID
	   AND k.NOMOR = PKUNJUNGAN
		AND k.NOPEN = p.NOMOR
		AND k.`STATUS` = 2
	 LIMIT 1;
	
	IF NOT VNOPEN IS NULL THEN
		SET VTAGIHAN = pembayaran.getIdTagihan(VNOPEN);
		
		IF VPAKET IS NULL OR VPAKET = 0 THEN
			SELECT r.JENIS_KUNJUNGAN
			  INTO VJENIS_KUNJUNGAN2
			  FROM layanan.order_resep orp,
			  	    pendaftaran.kunjungan k,
			  	    `master`.ruangan r
			 WHERE orp.NOMOR = VREF
			   AND k.NOMOR = orp.KUNJUNGAN
			   AND r.ID = k.RUANGAN
			 LIMIT 1;
			 
			IF NOT VJENIS_KUNJUNGAN2 IS NULL THEN
				IF VJENIS_KUNJUNGAN2 = 1 AND NOT VREF IS NULL THEN 
					IF pembayaran.isTagihanTerpisah(VRUANGAN, VPENJAMIN) = 1 THEN
						SET VTAGIHAN_TERPISAH = pembayaran.getIdTagihanTerpisah(VNOPEN, PKUNJUNGAN);
						IF VTAGIHAN_TERPISAH != '' THEN
							SET VTAGIHAN = VTAGIHAN_TERPISAH;
						END IF;
					END IF;
				END IF;
			END IF;
		END IF;
		
		SET VJUMLAH = pembayaran.getJumlahItemRincianPaket(VTAGIHAN, PFARMASI, 2) + PJUMLAH;
				
		SELECT pt.PENJAMIN INTO VPENJAMIN
		  FROM pembayaran.penjamin_tagihan pt 
		 WHERE pt.TAGIHAN = VTAGIHAN
		   AND pt.KE = 1
		 LIMIT 1;
		 
		IF VPENJAMIN IS NULL THEN
			SET VPENJAMIN = 1; 
		END IF;
		
		IF pembayaran.isFinalTagihan(VTAGIHAN) = 0 THEN
		BEGIN
			DECLARE VSISA_PAKET DECIMAL(60,2) DEFAULT 0;
			DECLARE VSISA DECIMAL(60,2) DEFAULT 0;
			
			SET VSISA = PJUMLAH;
			
			IF NOT VPAKET IS NULL OR VPAKET > 0 THEN
				CALL master.inPaket(VPAKET, 2, PFARMASI, NULL, VQTY, VPAKET_DETIL);
				IF VJUMLAH < VQTY THEN
					SET VSISA_PAKET = PJUMLAH;
					SET VSISA = 0;
				ELSE
					SET VSISA_PAKET = PJUMLAH - (VJUMLAH - VQTY);					
					IF VSISA_PAKET > 0 THEN
						SET VSISA = PJUMLAH - VSISA_PAKET;
					END IF;					
				END IF;	
				
				IF VTAGIHAN != '' AND VPAKET_DETIL > 0 AND VSISA_PAKET > 0 THEN
					CALL pembayaran.storeRincianTagihanPaket(VTAGIHAN, VPAKET_DETIL, PLAYANAN_FARMASI, VTANGGAL, VSISA_PAKET, 1);
				END IF;
			END IF;
			
			IF VTAGIHAN != '' AND (VPAKET_DETIL = 0 OR VSISA > 0) THEN
			BEGIN
				DECLARE VKELAS_SBLM SMALLINT;
				DECLARE VKATEGORI CHAR(10);
				
				SELECT b.KATEGORI INTO VKATEGORI
				  FROM inventory.barang b
				 WHERE b.ID = PFARMASI;
								
				CALL inventory.getHargaBarang(PFARMASI, VTARIF_ID, VTARIF, VTGL_PENDAFTARAN);
								
				SET VKELAS_SBLM = pembayaran.getKelasRJMengikutiKelasRIYgPertama(VTAGIHAN, VKUNJUNGAN_YG_MERESEP);
				IF VKELAS_SBLM > 0 THEN
					SET VKELAS = VKELAS_SBLM;
				END IF;
				
				IF NOT VKATEGORI IS NULL THEN
					IF LEFT(VKATEGORI, 3) IN ('101', '102') THEN
						SET VTARIF = master.getTarifMarginPenjaminFarmasi(VPENJAMIN, 1, VTARIF, VTGL_PENDAFTARAN);
						SET VTARIF = master.getTarifFarmasiPerKelas(VKELAS, VTARIF);
					END IF;
				END IF;
				
				SET VPERSENTASE = penjamin_rs.getKenaikanTarif(VPENJAMIN, 4, VTGL_PENDAFTARAN);
				IF VPERSENTASE > 0 THEN
					SET VTARIF = VTARIF + (VTARIF * VPERSENTASE);
				END IF;
				
				CALL pembayaran.storeRincianTagihan(VTAGIHAN, PLAYANAN_FARMASI, 4, VTARIF_ID, VSISA, VTARIF, VKELAS, 0, 0);		
			END;
			END IF;
		END;
		END IF;	
	END IF;
END//
DELIMITER ;

-- membuang struktur untuk procedure pembayaran.storeO2
DROP PROCEDURE IF EXISTS `storeO2`;
DELIMITER //
CREATE PROCEDURE `storeO2`(
	IN `PKUNJUNGAN` CHAR(19)
)
BEGIN
	DECLARE VNOPEN, VRUANGAN CHAR(10);
	DECLARE VTAGIHAN, VTAGIHAN_TERPISAH CHAR(10);
	DECLARE VJENIS_KUNJUNGAN TINYINT;
	DECLARE VTARIF_ID INT;
	DECLARE VTARIF DECIMAL(60,2);
	DECLARE VKELAS SMALLINT DEFAULT 0;
	DECLARE VPAKET, VPENJAMIN SMALLINT DEFAULT NULL;
	DECLARE VQTY DECIMAL(60,2) DEFAULT 0;
	DECLARE VPEMAKAIAN DECIMAL(60,2) DEFAULT 0;
	DECLARE VSISA, VPERSENTASE DECIMAL(60,2) DEFAULT 0;
	DECLARE VPAKET_DETIL INT DEFAULT 0;
	DECLARE VTANGGAL_PENDAFTARAN, VTANGGAL_KUNJUNGAN, VTANGGAL DATETIME;
	DECLARE VREF CHAR(21);

	SELECT k.NOPEN, r.JENIS_KUNJUNGAN, IF(k.TITIPAN = 1, k.TITIPAN_KELAS, IF(rk.KELAS IS NULL, 0, rk.KELAS)) KELAS, 
	       p.PAKET, p.TANGGAL, k.MASUK, k.RUANGAN, pj.JENIS, k.REF
	  INTO VNOPEN, VJENIS_KUNJUNGAN, VKELAS, 
	       VPAKET, VTANGGAL_PENDAFTARAN, VTANGGAL_KUNJUNGAN, VRUANGAN, VPENJAMIN, VREF
	  FROM pendaftaran.kunjungan k
	  		 LEFT JOIN master.ruang_kamar_tidur rkt ON rkt.ID = k.RUANG_KAMAR_TIDUR
			 LEFT JOIN master.ruang_kamar rk ON rk.ID = rkt.RUANG_KAMAR,
	  		 master.ruangan r,
	  		 pendaftaran.pendaftaran p,
	  		 pendaftaran.penjamin pj
	 WHERE k.NOMOR = PKUNJUNGAN
	 	AND k.RUANGAN = r.ID	   
		AND p.NOMOR = k.NOPEN
		AND pj.NOPEN = p.NOMOR;
		
	IF NOT VNOPEN IS NULL THEN
		SET VTANGGAL = VTANGGAL_KUNJUNGAN;
		
		IF EXISTS(SELECT 1
			  FROM aplikasi.properti_config pc
			 WHERE pc.ID = 6
			   AND VALUE = 'TRUE') THEN
			SET VTANGGAL = VTANGGAL_PENDAFTARAN;
		END IF;
		
		SET VPEMAKAIAN = layanan.getTotalPemakaianO2(PKUNJUNGAN);
		SET VSISA = VPEMAKAIAN;
		SET VTAGIHAN = pembayaran.getIdTagihan(VNOPEN);
		
		IF VPAKET IS NULL OR VPAKET = 0 THEN
			IF VJENIS_KUNJUNGAN = 1 AND NOT VREF IS NULL THEN 
				IF pembayaran.isTagihanTerpisah(VRUANGAN, VPENJAMIN) = 1 THEN
					SET VTAGIHAN_TERPISAH = pembayaran.getIdTagihanTerpisah(VNOPEN, PKUNJUNGAN);
					IF VTAGIHAN_TERPISAH != '' THEN
						SET VTAGIHAN = VTAGIHAN_TERPISAH;
					END IF;
				END IF;
			END IF;
		END IF;
			
		IF pembayaran.isFinalTagihan(VTAGIHAN) = 0 THEN
			IF NOT VPAKET IS NULL OR VPAKET > 0 THEN
				CALL master.inPaket(VPAKET, 4, 0, NULL, VQTY, VPAKET_DETIL);
				
				SET VSISA = VPEMAKAIAN - VQTY;
				IF VSISA <= 0 AND EXISTS(
					SELECT 1
					  FROM pembayaran.rincian_tagihan rt
					 WHERE rt.TAGIHAN = VTAGIHAN
					   AND rt.REF_ID = PKUNJUNGAN
					   AND rt.JENIS = 6) THEN
					
					CALL pembayaran.batalRincianTagihan(VTAGIHAN, PKUNJUNGAN, 6);
				ELSE
					UPDATE temp.temp SET ID = 0 WHERE ID = 0;
				END IF;
				
				IF VTAGIHAN != '' AND VPAKET_DETIL > 0 AND VPEMAKAIAN > 0 AND VQTY > 0 THEN
					CALL pembayaran.storeRincianTagihanPaket(VTAGIHAN, VPAKET_DETIL, PKUNJUNGAN, VTANGGAL, VPEMAKAIAN, 1);
				END IF;
			END IF;						 
			
			IF VTAGIHAN != '' AND VSISA > 0.0 THEN
			BEGIN
				DECLARE VKELAS_SBLM SMALLINT;								
				
				CALL master.getTarifO2(VTANGGAL, VTARIF_ID, VTARIF);
				
				SET VKELAS_SBLM = pembayaran.getKelasRJMengikutiKelasRIYgPertama(VTAGIHAN, PKUNJUNGAN);
				IF VKELAS_SBLM > 0 THEN
					SET VKELAS = VKELAS_SBLM;
				END IF;
				
				SET VPERSENTASE = penjamin_rs.getKenaikanTarif(VPENJAMIN, 6, VTANGGAL);
				IF VPERSENTASE > 0 THEN
					SET VTARIF = VTARIF + (VTARIF * VPERSENTASE);
				END IF;
				
				CALL pembayaran.storeRincianTagihan(VTAGIHAN, PKUNJUNGAN, 6, VTARIF_ID, VSISA, VTARIF, VKELAS, 0, 0);						
			END;
			END IF;
		END IF;	
	ELSE
		UPDATE temp.temp SET ID = 0 WHERE ID = 0;
	END IF;
END//
DELIMITER ;

-- membuang struktur untuk procedure pembayaran.storeTindakanMedis
DROP PROCEDURE IF EXISTS `storeTindakanMedis`;
DELIMITER //
CREATE PROCEDURE `storeTindakanMedis`(
	IN `PKUNJUNGAN` CHAR(19),
	IN `PTINDAKAN_MEDIS` CHAR(11),
	IN `PTINDAKAN` SMALLINT
)
BEGIN
	DECLARE VNOPEN, VTAGIHAN, VRUANGAN, VTAGIHAN_TERPISAH CHAR(10);
	DECLARE VJENIS_KUNJUNGAN TINYINT;
	DECLARE VTARIF_ID INT;
	DECLARE VTARIF INT;
	DECLARE VKELAS SMALLINT DEFAULT 0;
	DECLARE VPAKET, VPENJAMIN SMALLINT DEFAULT FALSE;
	DECLARE VQTY, VPERSENTASE DECIMAL(60,2) DEFAULT 0.0;
	DECLARE VPAKET_DETIL INT DEFAULT 0;
	DECLARE VJUMLAH DECIMAL(60,2) DEFAULT 1.0;
	DECLARE VREF CHAR(21);
	DECLARE VTANGGAL_PENDAFTARAN, VTANGGAL_TINDAKAN, VTANGGAL DATETIME;
	
	SELECT k.NOPEN, r.JENIS_KUNJUNGAN, IF(r.JENIS_KUNJUNGAN = 3, IF(k.TITIPAN = 1, k.TITIPAN_KELAS, IF(rk.KELAS IS NULL, 0, rk.KELAS))
			 , IF(rkls.KELAS IS NULL, 0, rkls.KELAS)) KELAS
			 , p.PAKET, k.REF, p.TANGGAL, tm.TANGGAL, k.RUANGAN, pj.JENIS
	  INTO VNOPEN, VJENIS_KUNJUNGAN, VKELAS
	       , VPAKET, VREF, VTANGGAL_PENDAFTARAN, VTANGGAL_TINDAKAN, VRUANGAN, VPENJAMIN
	  FROM layanan.tindakan_medis tm,
	  		 pendaftaran.kunjungan k
	  		 LEFT JOIN master.ruang_kamar_tidur rkt ON rkt.ID = k.RUANG_KAMAR_TIDUR
			 LEFT JOIN master.ruang_kamar rk ON rk.ID = rkt.RUANG_KAMAR,
	  		 master.ruangan r
			 LEFT JOIN master.ruangan_kelas rkls ON rkls.RUANGAN = r.ID AND rkls.`STATUS` = 1,
	  		 pendaftaran.pendaftaran p,
	  		 pendaftaran.penjamin pj
	 WHERE tm.ID = PTINDAKAN_MEDIS
	   AND k.NOMOR = PKUNJUNGAN
	 	AND k.NOMOR = tm.KUNJUNGAN	 	
	 	AND k.RUANGAN = r.ID
		AND p.NOMOR = k.NOPEN
		AND pj.NOPEN = p.NOMOR
	 LIMIT 1;
	
	IF NOT VNOPEN IS NULL THEN
		SET VTANGGAL = VTANGGAL_TINDAKAN;
		
		IF EXISTS(SELECT 1
			  FROM aplikasi.properti_config pc
			 WHERE pc.ID = 6
			   AND VALUE = 'TRUE') THEN
			SET VTANGGAL = VTANGGAL_PENDAFTARAN;
		END IF;
									
		SET VTAGIHAN = pembayaran.getIdTagihan(VNOPEN);
		SET VJUMLAH = pembayaran.getJumlahItemRincianPaket(VTAGIHAN, PTINDAKAN, 1) + 1;
		
		IF VPAKET IS NULL OR VPAKET = 0 THEN
			IF VJENIS_KUNJUNGAN != 3 AND NOT VREF IS NULL THEN
				IF pembayaran.isTagihanTerpisah(VRUANGAN, VPENJAMIN) = 1 THEN
					SET VTAGIHAN_TERPISAH = pembayaran.getIdTagihanTerpisah(VNOPEN, PKUNJUNGAN);
					IF VTAGIHAN_TERPISAH != '' THEN
						SET VTAGIHAN = VTAGIHAN_TERPISAH;
					END IF;
				END IF;
			END IF;
		END IF;
		
		IF NOT (VJENIS_KUNJUNGAN = 3 AND NOT VREF IS NULL) THEN
			BEGIN
				DECLARE VKUNJUNGAN CHAR(19);
				DECLARE VKELAS_SBLM TINYINT;
				
				SELECT r.KUNJUNGAN INTO VKUNJUNGAN
				  FROM (
					SELECT k.KUNJUNGAN
					  FROM pendaftaran.konsul k
					 WHERE k.NOMOR = VREF
					 UNION
					SELECT ol.KUNJUNGAN
					  FROM layanan.order_lab ol
					 WHERE ol.NOMOR = VREF
					 UNION
					SELECT ora.KUNJUNGAN
					  FROM layanan.order_rad ora
					 WHERE ora.NOMOR = VREF
					) r;
					
				IF VJENIS_KUNJUNGAN = 2 THEN
					SET VKUNJUNGAN = PKUNJUNGAN;
				END IF;
				
				IF NOT VKUNJUNGAN IS NULL OR VJENIS_KUNJUNGAN = 2 THEN
					IF EXISTS(SELECT 1
						  FROM aplikasi.properti_config pc
						 WHERE pc.ID = 7
						   AND VALUE = 'TRUE') THEN
						SELECT IF(rk.KELAS IS NULL, 0, rk.KELAS) KELAS
						  INTO VKELAS_SBLM
						  FROM pendaftaran.kunjungan k
						  		 LEFT JOIN master.ruang_kamar_tidur rkt ON rkt.ID = k.RUANG_KAMAR_TIDUR
								 LEFT JOIN master.ruang_kamar rk ON rk.ID = rkt.RUANG_KAMAR 
						 WHERE k.NOMOR = VKUNJUNGAN
							AND k.RUANG_KAMAR_TIDUR > 0
							AND NOT k.`STATUS` = 0;
							
						IF NOT VKELAS_SBLM IS NULL THEN
							IF VKELAS_SBLM > 0 THEN
								SET VKELAS = VKELAS_SBLM;
							END IF;
						END IF;
					END IF;
					
					SET VKELAS_SBLM = pembayaran.getKelasRJMengikutiKelasRIYgPertama(VTAGIHAN, VKUNJUNGAN);
					IF VKELAS_SBLM > 0 THEN
						SET VKELAS = VKELAS_SBLM;
					END IF;
				END IF;
			END;
		END IF;		
				
		IF pembayaran.isFinalTagihan(VTAGIHAN) = 0 THEN
			IF NOT VPAKET IS NULL OR VPAKET > 0 THEN
				CALL master.inPaket(VPAKET, 1, PTINDAKAN, VRUANGAN, VQTY, VPAKET_DETIL);
				
				IF VTAGIHAN != '' AND VPAKET_DETIL > 0 AND VJUMLAH <= VQTY THEN
					CALL pembayaran.storeRincianTagihanPaket(VTAGIHAN, VPAKET_DETIL, PTINDAKAN_MEDIS, VTANGGAL, 1, 1);
				END IF;
			END IF;
			
			IF VTAGIHAN != '' AND (VPAKET_DETIL = 0 OR VJUMLAH > VQTY) THEN			
				CALL master.getTarifTindakan(PTINDAKAN, VKELAS, VTANGGAL, VTARIF_ID, VTARIF);
				SET VPERSENTASE = penjamin_rs.getKenaikanTarif(VPENJAMIN, 3, VTANGGAL);
				IF VPERSENTASE > 0 THEN
					SET VTARIF = VTARIF + (VTARIF * VPERSENTASE);
				END IF;
				CALL pembayaran.storeRincianTagihan(VTAGIHAN, PTINDAKAN_MEDIS, 3, VTARIF_ID, 1, VTARIF, VKELAS, 0, 0);
			END IF;
		END IF;
	END IF;
END//
DELIMITER ;

/*!40103 SET TIME_ZONE=IFNULL(@OLD_TIME_ZONE, 'system') */;
/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IFNULL(@OLD_FOREIGN_KEY_CHECKS, 1) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40111 SET SQL_NOTES=IFNULL(@OLD_SQL_NOTES, 1) */;
